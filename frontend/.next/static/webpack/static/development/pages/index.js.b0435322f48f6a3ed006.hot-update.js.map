{"version":3,"file":"static/webpack/static/development/pages/index.js.b0435322f48f6a3ed006.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/style.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport React, { useState } from 'react';\nimport {usePosition} from 'use-position';\n\n//Define questionaire here:\nimport Questionaire from '../questions/disney';\n\n//Define limit of question here: \nconst QUESTION_LIMIT = 10; \n\nlet questionNumber = 1; \nlet metric = 0; \nlet driven = false; \n\nconst Quiz = () => {\n    const { latitude, longitude, timestamp, accuracy, error } = usePosition();\n    const [indexDriven, setIndexDriven] = useState(0);\n    const [indexFiller, setIndexFiller] = useState(0);\n    const [finished, setFinished] = useState(0);\n\n    const handleSubmit = event => {\n        const form = event.target;\n\n        const Country = {\n            \"data\": {\n                \"latitude\": latitude,\n                \"longitude\": longitude,\n                \"metric\": metric,\n                \"gender\": form.elements.gender.value,\n                \"age\": form.elements.age.value\n            }\n        };\n\n        console.log(JSON.stringify(Country));\n    };\n\n    function answered(response) {\n        questionNumber += 1;\n\n        if(questionNumber == QUESTION_LIMIT) {\n            setFinished(1);\n        }\n\n        if(!driven) {\n            driven = true; \n            setIndexFiller(indexFiller + 1);\n        } else {\n            driven = false; \n            response == 1 ? metric += 0 : metric += 1; \n            setIndexDriven(indexDriven + 1);\n        }\n    }\n\n    return (\n        <div className='container'>\n            { finished\n                ? \n                    <div>\n                        <h1> Finished! </h1>\n                        <h2> You got: {Questionaire.data.results[metric].male} </h2>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Gender</Form.Label>\n                                <Form.Control name='gender' as=\"select\" required>\n                                    <option>Male</option>\n                                    <option>Female</option>\n                                    <option>Other</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                                <Form.Label>Age</Form.Label>\n                                <Form.Control name='age'/>\n                            </Form.Group>\n                            <div className='buttonContainer'>\n                                <Button variant=\"info\" type=\"submit\" size=\"lg\">\n                                    Submit\n                                </Button>\n                            </div>        \n                        </Form>\n                    </div>\n                : \n                    <div>\n                        <h1> {Questionaire.data.title} </h1>\n                        <Card>\n                            <Card.Header as=\"h5\"> Question {questionNumber} </Card.Header>\n                            <Card.Body>\n                                <Card.Title className=\"questionTitle\"> </Card.Title>\n                                <Card.Text>\n                                    {driven ? Questionaire.data.dataDrivenQuestions[indexDriven] : Questionaire.data.fillerQuestions[indexFiller]}\n                                </Card.Text>\n                                <div className='buttonContainer'>\n                                    <Button className='responseButton' variant=\"success\" onClick={() => answered(1)}>Yes</Button>\n                                    <Button className='responseButton' variant=\"danger\" onClick={() => answered(0)}>No</Button>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n            }\n        </div>\n    );\n}\n  \nexport default Quiz;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}